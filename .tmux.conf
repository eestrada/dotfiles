# because I dislike emacs style keybindings
setw -g mode-keys vi

# There is hardly a terminal in common use today that doesn't support 256 colors.
set -g default-terminal "screen-256color"

# Have tmux copy mode act more like vim/nvim visual mode
# Sourced from this link: https://dev.to/iggredible/the-easy-way-to-copy-text-in-tmux-319g
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# Enable mouse selection
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel

# the commands below adds the copied text to to the macos clipboard. Maybe we
# can conditionally enable this in the future.
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# mouse settings need to be silenced since they changed between tmux versions.
setw -gq mouse off
setw -gq mode-mouse off
setw -gq mouse-resize-pane off
setw -gq mouse-select-pane off
setw -gq mouse-select-window off

# I mostly use tmux from the shell command, so I don't need to wait for the
# escape key for anything to work properly.
# Value must be non-zero to avoid issue mentioned here:
# https://github.com/microsoft/WSL/issues/5931
set -s escape-time 1

# make tmux open new windows/panes in the same current working directory
# of the current pane/window.
# originally found here:
# https://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux#118381
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
